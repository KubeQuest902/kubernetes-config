- name: "Install kubernetes Ansible module"
  pip:
    name:
      kubernetes

- name: Create Harbor CA certificate ConfigMap from harbor.crt
  kubernetes.core.k8s:
    namespace: kube-system
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: harbor-ca-cert
      data:
        ca.crt: "{{ lookup('file', './harbor.crt') }}"
    state: present
    kubeconfig: "~{{ansible_user}}/.kube/config"

- name: Apply kube-daemonset.yaml
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', 'kube-daemonset.yaml') }}"
    kubeconfig: "~{{ansible_user}}/.kube/config"

- name: Create namespaces from namespaces.yaml
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', './namespaces.yaml') }}"
    kubeconfig: "~{{ansible_user}}/.kube/config"

- name: Create Redis secret in 'redis' namespace
  kubernetes.core.k8s:
    namespace: redis
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: redis-credentials
      data:
        redis-password: "{{ lookup('file', './password') | b64encode }}"
    kubeconfig: "~{{ansible_user}}/.kube/config"
    state: present

- name: Create Redis secret in 'app' namespace
  kubernetes.core.k8s:
    namespace: app
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: redis-credentials
      data:
        redis-password: "{{ lookup('file', './password') | b64encode }}"
    kubeconfig: "~{{ansible_user}}/.kube/config"
    state: present

- name: Install Redis
  kubernetes.core.helm:
    name: redis
    chart_ref: bitnami/redis
    chart_version: 20.9.0
    namespace: redis
    values_files:
      - redis.yaml
    set_values:
      - value: architecture=standalone
      - value: master.persistence.enabled=false
    kubeconfig: "~{{ansible_user}}/.kube/config"